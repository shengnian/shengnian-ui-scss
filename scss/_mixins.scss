/********************
  _site.scss
********************/
@function headerLineHeightOffset()  {
  @return (to-number($header-line-height) - 1em) / 2;
}

@function headerTopMargin() {
  @return #{"calc(2rem - " + headerLineHeightOffset() + ")"}
}

@mixin headerMargin {
  margin: headerTopMargin() 0 $header-bottom-margin;
}

/********************
  _input.scss
********************/
@function inputIconWidthFunc () {
  @return (to-number($input-vertical-padding) * 2) + $glyph-width;
}

@mixin inputIconWidth {
  width: inputIconWidthFunc();
}

@mixin inputIconMargin {
  padding-right: inputIconWidthFunc() + $input-icon-distance !important;
}

/********************
  _dropdown.scss
*********************/
@function dropdownSelectionMinHeight() {
  @return to-number($input-line-height) + (to-number($dropdown-selection-vertical-padding) * 2) - to-number($dropdown-selection-border-em-width);
}

@function dropdownSelectionIconDistance() {
  @return to-number($input-horizontal-padding) + $glyph-width
}

@function dropdownSelectionPadding() {
  @return to-number($dropdown-selection-vertical-padding) dropdownSelectionIconDistance() to-number($dropdown-selection-vertical-padding) to-number($dropdown-selection-horizontal-padding);
}

@mixin dropdownSelectionMinSize {
  min-width: $dropdown-selection-min-width;
  min-height: dropdownSelectionMinHeight();
  padding: dropdownSelectionPadding();
}


// selection
@function dropdownSelectionItemHeight () {
  @return (to-number($dropdown-selection-item-vertical-padding) * 2) + strip-number(($dropdown-item-line-height + $dropdown-selected-borderEMWidth + ""), 'em');
}

@function dropdownSelectionMaxMenuHeight($max-items) {
  @return (dropdownSelectionItemHeight() * $max-items);
}

@mixin dropdownSelectionMobileMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-mobile-max-items);
}

@mixin dropdownSelectionTabletMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-tablet-max-items);
  //max-height: $dropdown-selection-tablet-max-menu-height;
}

@mixin dropdownSelectionComputerMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-computer-max-items);
  //max-height: $dropdown-selection-computer-max-menu-height;
}

@mixin dropdownSelectionWidescreenMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-widescreen-max-items);
  //max-height: $dropdown-selection-widescreen-max-menu-height;
}


// scrolling
@function dropdownScrollingItemHeight () {
  @return (to-number($dropdown-item-vertical-padding) * 2) + strip-number(($dropdown-item-line-height + $dropdown-scrolling-borderEMWidth + ''), 'em')
}

@function dropdownScrollingMaxMenuHeight ($max-items) {
  @return (dropdownScrollingItemHeight() * $max-items)
}

@mixin dropdownScrollingMobileMaxMenuHeight {
  max-height: dropdownScrollingMaxMenuHeight($dropdown-scrolling-mobile-max-items);
  //max-height: $dropdown-scrolling-mobile-max-menu-height;
}

@mixin dropdownScrollingTabletMaxMenuHeight {
  max-height: dropdownScrollingMaxMenuHeight($dropdown-scrolling-tablet-max-items);
  //max-height: $dropdown-scrolling-tablet-max-menu-height;
}

@mixin dropdownScrollingComputerMaxMenuHeight {
  max-height: dropdownScrollingMaxMenuHeight($dropdown-scrolling-computer-max-items);
  //max-height: $dropdown-scrolling-computer-max-menu-height;
}

@mixin dropdownScrollingWidescreenMaxMenuHeight {
  max-height: dropdownScrollingMaxMenuHeight($dropdown-selection-widescreen-max-items);
  //max-height: $dropdown-scrolling-widescreen-max-menu-height;
}

// dropdown search
@mixin dropdownSearchMobileMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-mobile-max-items);
}

@mixin dropdownSearchTabletMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-tablet-max-items);
}

@mixin dropdownSearchComputerMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-computer-max-items);
}

@mixin dropdownSearchWidescreenMaxMenuHeight {
  max-height: dropdownSelectionMaxMenuHeight($dropdown-selection-widescreen-max-items);
}


// dropdown multiple
@function dropdownMultipleSelectionChildLeftMargin () {
  @return (to-number($input-horizontal-padding) - to-number($dropdown-multiple-selection-left-padding));
}

@function dropdownMultipleSelectionChildVerticalMargin () {
  @return (to-number($dropdown-selection-vertical-padding) - ((to-number($dropdown-search-selection-line-height) - 1) / 2)) * (2/3);
}

@mixin dropdownMultipleSelectionChildMargin {
  margin: dropdownMultipleSelectionChildVerticalMargin() 0 dropdownMultipleSelectionChildVerticalMargin() dropdownMultipleSelectionChildLeftMargin();
}


@function dropdownSearchSelectionLineHeightOffset() {
  @return ((to-number($dropdown-search-selection-line-height) - 1em) / 2);
}

@function dropdownSearchSelectionVerticalPadding() {
  @return to-number($dropdown-selection-vertical-padding) - (dropdownSearchSelectionLineHeightOffset());
}

@function dropdownMultipleSelectionVerticalPadding() {
  @return (dropdownSearchSelectionVerticalPadding() * (1/3));
  @return dropdownMultipleSelectionVerticalPadding $dropdown-multiple-selection-right-padding $dropdown-multiple-selection-vertical-padding $dropdown-multiple-selection-left-padding;
}

@mixin dropdownMultipleSelectionPadding {
  padding: dropdownMultipleSelectionVerticalPadding() dropdownSelectionIconDistance()  dropdownMultipleSelectionVerticalPadding() to-number($dropdown-multiple-selection-left-padding);
  //padding: $dropdown-multiple-selection-padding;
}

@mixin dropdownSelectionIconPadding {
  padding: to-number($dropdown-selection-icon-hitbox) / to-number($dropdown-dropdown-icon-size) + em;
}

@mixin dropdownSearchSelectionInputPadding {
  padding: dropdownSearchSelectionVerticalPadding() dropdownSelectionIconDistance() dropdownSearchSelectionVerticalPadding() to-number($dropdown-search-selection-horizontal-padding);
}

@function dropdownPointingArrowOffset() {
  @return (to-number(-$dropdown-pointing-arrow-size) / 2)
}

/******************
  _modal.scss
*******************/
@function modalCloseHitBoxOffset() {
  @return ($modal-close-hitbox - 1rem) / 2
}

@function modalInnerCloseTop() {
  @return $modal-header-vertical-padding - modalCloseHitBoxOffset() + (strip-number($line-height + '', 'em') - 1)
}

/* Inner Close Position (Tablet/Mobile) */
@mixin modalInnerClose {
  top: modalInnerCloseTop();
  right: 1rem;
  color: $text-color;
}

/********************
  _menu.scss
********************/
@function menuMinHeightFunc() {
  @return (to-number($menu-item-vertical-padding) * 2) + 1em;
}
@mixin menuMinHeight {
  min-height: menuMinHeightFunc();
}

@mixin menuSubMenuMargin {
  margin: $menu-sub-menu-distance to-number(-$menu-item-horizontal-padding) 0;
}

@function menuSubMenuHorizontalPadding() {
  @return (to-number($menu-item-horizontal-padding) / $tiny-size) + $menu-sub-menu-indent;
}
@mixin menuSubMenuPadding {
  padding: $menu-sub-menu-vertical-padding menuSubMenuHorizontalPadding();
}

@mixin menuSecondaryMenuSubMenuItemMargin {
  margin: $menu-secondary-menu-sub-menu-item-margin;
}

@mixin menuSecondaryMenuSubMenuItemPadding {
  padding: $relative7px ((to-number($menu-item-horizontal-padding) / to-number($tiny-size)) + $menu-sub-menu-indent);
}

@mixin menuTextMenuMargin {
  margin: $relative-medium to-number(-$menu-text-menu-item-spacing);
}

/********************
  _button.scss
********************/

@function buttonCompactVerticalPadding() {
  @return (to-number($button-vertical-padding) * 0.75);
}

@function buttonCompactHorizontalPadding() {
  @return (to-number($button-horizontal-padding) * 0.75);
}

@function buttonShadowOffset() {
  @return $button-shadow-distance / 2;
}

@function buttonLabeledIconWidth() {
  @return 1em + (to-number($button-vertical-padding) * 2)
}

// ui
@function buttonVerticalPadding() {
  @return to-number($button-vertical-padding);
}

@mixin buttonPadding($u, $r, $d) {
  padding: $u $r $d;
}

@mixin buttonLabeledIconWidthMixin {
  width: buttonLabeledIconWidth();
}


@function buttonLabeledIconPaddingFunc() {
  @return  ($button-horizontal-padding + buttonLabeledIconWidth());
}

@mixin buttonLabeledIconPadding {
  padding-left: buttonLabeledIconPaddingFunc() !important;
  padding-right: $button-horizontal-padding !important;
}

// button or
@function buttonOrHeight() {
  @return (to-number($button-vertical-padding) * 2) + 1em;
}
@mixin buttonOr {
  width: $button-or-gap;
  height: buttonOrHeight();
  z-index: $button-or-zindex;
}

@function buttonOrHeight() {
  @return (to-number($button-vertical-padding) * 2) + 1em;
}

@function buttonOrCircleSize() {
  @return buttonOrHeight() - to-number($button-or-circle-distance-to-edge);
}

@function buttonOrVerticalOffset() {
  @return -(buttonOrCircleSize() / 2);
}

@function buttonOrHorizontalOffset() {
  @return -(buttonOrCircleSize() / 2)
}

@mixin buttonOrBefore {
  margin-top: buttonOrVerticalOffset();
  margin-left: buttonOrHorizontalOffset();

  width: buttonOrCircleSize();
  height: buttonOrCircleSize();

  line-height: buttonOrCircleSize();
}

@mixin buttonLoaderMargin() {
  margin: loaderOffsetBy($loader-size) 0 0 loaderOffsetBy($loader-size);
}

@mixin loaderMargin($loader-size) {
  margin: loaderOffsetBy($loader-size) 0 0 loaderOffsetBy($loader-size);
}


@mixin buttonIconMargin {
  margin: 0 to-number($button-icon-distance) 0 (to-number(-$button-icon-distance) / 2);
}

@mixin buttonRightIconMargin {
  margin: 0 (to-number(-$button-icon-distance) / 2) 0 to-number($button-icon-distance);
}

/********************
  _input.scss
********************/
@function inputVerticalPadding() {
  @return to-number($input-vertical-padding);
}

@function inputHorizontalPadding() {
  @return to-number($input-horizontal-padding);
}

@function inputLineHeightOffset() {
  @return (to-number($input-line-height) - 1em) / 2;
}


//@return ($input-vertical-padding - $input-line-height-offset) $input-horizontal-padding
@mixin inputPadding {
  padding: inputVerticalPadding() - inputLineHeightOffset() inputHorizontalPadding();
}

@mixin inputIconPlPr {
  padding-left: inputIconWidthFunc() + $input-icon-distance !important;
  padding-right: inputHorizontalPadding() !important;
}

/********************
  _loader.scss
********************/
@function loaderOffsetBy($offset) {
  @return -(to-number($offset) / 2);
}

//@function loaderSize() {
//  @return to-number($relative-big);
//}
//@function loaderOffset() {
//  @return -(loaderSize() / 2);
//}

// input loader margin
//@function loaderMargin() {
//  @return loaderOffset() 0 0 loaderOffset();
//}

@mixin inputLoaderMargin {
  margin: loaderOffsetBy($loader-size) 0 0 loaderOffsetBy($loader-size);
}

// input loader mini
//@function inputLoaderOffset($loader-off) {
//  @return -(to-number($loader-off) / 2);
//}

@mixin loaderMiniOffset {
  margin: 0 0 0 loaderOffsetBy($loader-mini);
}
@mixin loaderTinyOffset {
  margin: 0 0 0 loaderOffsetBy($loader-tiny);
}
@mixin loaderSmallOffset {
  margin: 0 0 0 loaderOffsetBy($loader-small);
}
@mixin loaderMediumOffset {
  margin: 0 0 0 loaderOffsetBy($loader-medium);
}
@mixin loaderLargeOffset {
  margin: 0 0 0 loaderOffsetBy($loader-large);
}
@mixin loaderBigOffset {
  margin: 0 0 0 loaderOffsetBy($loader-big);
}
@mixin loaderHugeOffset {
  margin: 0 0 0 loaderOffsetBy($loader-huge);
}
@mixin loaderMassiveOffset {
  margin: 0 0 0 loaderOffsetBy($loader-massive);
}

@mixin loaderPaddingTop($loader) {
  padding-top: (to-number($loader) + strip-number($loader-text-distance, 'em'));
}

/********************
  _form.scss
********************/

/*@mixin formLoaderMargin() {
  margin: loaderOffsetBy($form-loader-size) 0 0 loaderOffsetBy($form-loader-size);
  width: $form-loader-size;
  height: $form-loader-size;
}*/


/********************
  _segment.scss
********************/


/********************
  _popup.scss
********************/
@function popupTooltipArrowVerticalOffset() {
  @return -(to-number(-$_2px));
}

@function popupTooltipArrowHorizontalOffset() {
  @return (to-number(-$_1px));
}

@function popupArrowOffset() {
  @return -(to-number($popup-arrow-size) / 2) + $popup-arrow-jitter
}

/********************
  _search.scss
********************/

@function searchPromptPadding() {
  @return (to-number($search-prompt-vertical-padding) + ((1em - to-number($search-prompt-line-height)) / 2));
}